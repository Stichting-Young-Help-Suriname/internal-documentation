"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[229],{2176:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/git_workflow.excalidraw.dark-5c5831613798cf69e6a251ae5ba707f9.svg"},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>l});var s=i(6540);const r={},t=s.createContext(r);function d(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(t.Provider,{value:n},e.children)}},8581:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"guides/Workflows/Git","title":"Git","description":"This project uses a hybrid Git workflow that combines principles of trunk-based development with elements of GitFlow. This allows for flexibility in fast-paced feature development while maintaining code quality and stability across environments.","source":"@site/docs/guides/3. Workflows/2. Git.md","sourceDirName":"guides/3. Workflows","slug":"/guides/Workflows/Git","permalink":"/internal-documentation/guides/Workflows/Git","draft":false,"unlisted":false,"editUrl":"https://github.com/Stichting-Young-Help-Suriname/internal-documentation/docs/guides/3. Workflows/2. Git.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"guides","previous":{"title":"Trello","permalink":"/internal-documentation/guides/Workflows/Trello"},"next":{"title":"Documentation Workflow","permalink":"/internal-documentation/guides/Workflows/Documentation Workflow"}}');var r=i(4848),t=i(8453);const d={},l=void 0,c={},o=[{value:"Branch Workflow",id:"branch-workflow",level:2},{value:"\ud83e\uddf1 Branch Overview",id:"-branch-overview",level:3},{value:"\ud83c\udf31 Feature Development Flow",id:"-feature-development-flow",level:3},{value:"Steps:",id:"steps",level:4},{value:"\ud83d\udee0\ufe0f Hotfix Flow",id:"\ufe0f-hotfix-flow",level:3},{value:"\ud83d\ude80 Release Flow",id:"-release-flow",level:3},{value:"\ud83d\udca1Branch Naming Conventions",id:"branch-naming-conventions",level:3},{value:"\ud83d\udce6 Environments at a Glance",id:"-environments-at-a-glance",level:3},{value:"\ud83d\uddbc\ufe0fGit workflow diagram",id:"\ufe0fgit-workflow-diagram",level:3},{value:"\u2705 Branch Workflow Summary",id:"-branch-workflow-summary",level:3},{value:"Commit Guidelines",id:"commit-guidelines",level:2},{value:"\ud83d\udcdd Commit Conventions",id:"-commit-conventions",level:3},{value:"\u2705 Examples",id:"-examples",level:3},{value:"\ud83c\udfaf Commit Types",id:"-commit-types",level:3},{value:"\ud83d\udd12 Rules &amp; Tips",id:"-rules--tips",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["This project uses a hybrid Git workflow that combines principles of ",(0,r.jsx)(n.strong,{children:"trunk-based development"})," with elements of ",(0,r.jsx)(n.strong,{children:"GitFlow"}),". This allows for flexibility in fast-paced feature development while maintaining code quality and stability across environments."]}),"\n",(0,r.jsx)(n.h2,{id:"branch-workflow",children:"Branch Workflow"}),"\n",(0,r.jsx)(n.h3,{id:"-branch-overview",children:"\ud83e\uddf1 Branch Overview"}),"\n",(0,r.jsxs)(n.p,{children:["We maintain ",(0,r.jsx)(n.strong,{children:"three permanent branches"})," in the repository:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Branch"}),(0,r.jsx)(n.th,{children:"Purpose"}),(0,r.jsx)(n.th,{children:"Environment"}),(0,r.jsx)(n.th,{children:"Stability"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"main"})}),(0,r.jsx)(n.td,{children:"Production release"}),(0,r.jsx)(n.td,{children:"Public build"}),(0,r.jsx)(n.td,{children:"\u2705 Stable"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"staging"})}),(0,r.jsx)(n.td,{children:"Pre-release / QA"}),(0,r.jsx)(n.td,{children:"Internal testers & PM"}),(0,r.jsx)(n.td,{children:"\ud83d\udfe1 In review"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dev"})}),(0,r.jsx)(n.td,{children:"Active development"}),(0,r.jsx)(n.td,{children:"Developers only"}),(0,r.jsx)(n.td,{children:"\ud83d\udd34 Experimental"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["All new features start from the ",(0,r.jsx)(n.code,{children:"staging"})," branch."]}),"\n",(0,r.jsx)(n.h3,{id:"-feature-development-flow",children:"\ud83c\udf31 Feature Development Flow"}),"\n",(0,r.jsx)(n.h4,{id:"steps",children:"Steps:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Checkout from staging:"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git checkout staging \ngit pull\ngit checkout -b feat/your-feature-name\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Work on your feature"}),", then commit and push regularly."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When done"}),", merge into ",(0,r.jsx)(n.code,{children:"dev"}),":"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git checkout dev\ngit pull\ngit merge feat/your-feature-name\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Create a Pull Request"})," into ",(0,r.jsx)(n.code,{children:"staging"}),". A lead developer will:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Review your code"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Test the feature"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Merge into ",(0,r.jsx)(n.code,{children:"staging"})," once it passes QA"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"\ufe0f-hotfix-flow",children:"\ud83d\udee0\ufe0f Hotfix Flow"}),"\n",(0,r.jsxs)(n.p,{children:["For bugs found in production (",(0,r.jsx)(n.code,{children:"main"}),"):"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Checkout a new hotfix branch from ",(0,r.jsx)(n.code,{children:"staging"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git checkout staging \ngit pull \ngit checkout -b hotfix/fix-description\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Fix the bug, then merge into ",(0,r.jsx)(n.code,{children:"staging"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git checkout staging \ngit merge hotfix/fix-description\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["After approval, merge ",(0,r.jsx)(n.code,{children:"staging"})," into ",(0,r.jsx)(n.code,{children:"main"})," for release:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git checkout main \ngit merge staging \ngit tag v1.2.1 \ngit push --tags\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u2757 Always base hotfixes off ",(0,r.jsx)(n.code,{children:"staging"}),", ",(0,r.jsx)(n.strong,{children:"not main"}),", to keep history clean and consistent."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-release-flow",children:"\ud83d\ude80 Release Flow"}),"\n",(0,r.jsxs)(n.p,{children:["When the ",(0,r.jsx)(n.code,{children:"staging"})," branch has a collection of approved features:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Lead developer merges ",(0,r.jsx)(n.code,{children:"staging"})," into ",(0,r.jsx)(n.code,{children:"main"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git checkout main \ngit pull \ngit merge staging\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.strong,{children:"new release version"})," is tagged following ",(0,r.jsx)(n.strong,{children:"SemVer"})," (e.g. ",(0,r.jsx)(n.code,{children:"v1.2.0"}),"):"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git tag v1.2.0 \ngit push --tags\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"The application is built and deployed."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Post-deploy"}),", staging is ",(0,r.jsx)(n.strong,{children:"reset and synced"})," with main:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Existing staging data is wiped"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Fresh data from main is imported"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"branch-naming-conventions",children:"\ud83d\udca1Branch Naming Conventions"}),"\n",(0,r.jsx)(n.p,{children:"Use the following prefixes to make branches easy to track:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Prefix"}),(0,r.jsx)(n.th,{children:"Usage"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"feat/"})}),(0,r.jsx)(n.td,{children:"New features"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"feat/triangle-mini-game"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"hotfix/"})}),(0,r.jsx)(n.td,{children:"Urgent production bug fixes"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"hotfix/fraction-division-bug"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bugfix/"})}),(0,r.jsx)(n.td,{children:"General bug fixes"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"bugfix/nav-hover-state"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"docs/"})}),(0,r.jsx)(n.td,{children:"Documentation changes"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"docs/git-workflow"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"refactor/"})}),(0,r.jsx)(n.td,{children:"Code structure improvements"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"refactor/component-layout"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"-environments-at-a-glance",children:"\ud83d\udce6 Environments at a Glance"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Branch"}),(0,r.jsx)(n.th,{children:"Environment"}),(0,r.jsx)(n.th,{children:"Build Purpose"}),(0,r.jsx)(n.th,{children:"Data Policy"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"main"})}),(0,r.jsx)(n.td,{children:"Production"}),(0,r.jsx)(n.td,{children:"Public release"}),(0,r.jsx)(n.td,{children:"Real user data"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"staging"})}),(0,r.jsx)(n.td,{children:"QA/Internal"}),(0,r.jsx)(n.td,{children:"Beta build for PM/testers"}),(0,r.jsxs)(n.td,{children:["Wiped + synced from ",(0,r.jsx)(n.code,{children:"main"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dev"})}),(0,r.jsx)(n.td,{children:"Developer"}),(0,r.jsx)(n.td,{children:"Experimental"}),(0,r.jsx)(n.td,{children:"Mock/generated data allowed"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"\ufe0fgit-workflow-diagram",children:"\ud83d\uddbc\ufe0fGit workflow diagram"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"git_workflow",src:i(8800).A+"#light",width:"1457",height:"571"}),"\n",(0,r.jsx)(n.img,{alt:"git_workflow",src:i(2176).A+"#dark",width:"1457",height:"571"})]}),"\n",(0,r.jsx)(n.h3,{id:"-branch-workflow-summary",children:"\u2705 Branch Workflow Summary"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Developers"}),": Work in feature branches \u2192 merge to ",(0,r.jsx)(n.code,{children:"dev"})," \u2192 submit PR to ",(0,r.jsx)(n.code,{children:"staging"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Leads"}),": Review \u2192 test \u2192 merge to ",(0,r.jsx)(n.code,{children:"staging"})," \u2192 merge collections into ",(0,r.jsx)(n.code,{children:"main"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"QA"}),": Happens on ",(0,r.jsx)(n.code,{children:"staging"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Public"}),": Sees only ",(0,r.jsx)(n.code,{children:"main"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SemVer"})," is used for versioning (",(0,r.jsx)(n.code,{children:"major.minor.patch"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"commit-guidelines",children:"Commit Guidelines"}),"\n",(0,r.jsx)(n.h3,{id:"-commit-conventions",children:"\ud83d\udcdd Commit Conventions"}),"\n",(0,r.jsxs)(n.p,{children:["We follow the ",(0,r.jsx)(n.a,{href:"https://www.conventionalcommits.org/",children:"Conventional Commits"})," specification to keep our Git history clean, readable, and automatable.\nEach commit message should follow this format:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"<type>(optional scope): <short summary>  \n[optional body]  \n[optional footer(s)]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"-examples",children:"\u2705 Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"feat(mini-game): add triangle game mechanics \nfix(auth): prevent crash when token expires \nrefactor(average): simplify calculation logic \ndocs(readme): add setup instructions \nchore: update dependencies \ntest(fractions): add unit tests for reduceFraction()`\n"})}),"\n",(0,r.jsx)(n.h3,{id:"-commit-types",children:"\ud83c\udfaf Commit Types"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"feat"})}),(0,r.jsx)(n.td,{children:"A new feature"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"fix"})}),(0,r.jsx)(n.td,{children:"A bug fix"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"docs"})}),(0,r.jsx)(n.td,{children:"Changes to documentation only"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"style"})}),(0,r.jsx)(n.td,{children:"Code style changes (spacing, formatting, missing semicolons, etc)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"refactor"})}),(0,r.jsx)(n.td,{children:"Code changes that neither fix a bug nor add a feature"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"perf"})}),(0,r.jsx)(n.td,{children:"A code change that improves performance"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"test"})}),(0,r.jsx)(n.td,{children:"Adding or updating tests"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"chore"})}),(0,r.jsx)(n.td,{children:"Maintenance tasks like builds, dependency updates, etc"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ci"})}),(0,r.jsx)(n.td,{children:"Changes to CI/CD pipelines or scripts"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"build"})}),(0,r.jsx)(n.td,{children:"Changes that affect the build system or external dependencies"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"-rules--tips",children:"\ud83d\udd12 Rules & Tips"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.strong,{children:"present tense"}),": ",(0,r.jsx)(n.em,{children:"\u201cadd\u201d, not \u201cadded\u201d or \u201cadds\u201d"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Start your message with a lowercase letter (unless it\u2019s a proper noun)"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Keep the summary under 72 characters"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Add a body if you need to explain ",(0,r.jsx)(n.strong,{children:"why"})," the change was made"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"You can reference issues or tasks in the footer:"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Fixes #42\n"})})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8800:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/git_workflow.excalidraw.light-8c1666ee462fc3a4b077dfc39835a952.svg"}}]);